import Foundation

{ TEST_IMPORT }

class _{ CLASSNAME }  {
	
	{ OPTIONALS }
	{ NONOPTIONALS }

	required init({ REQUIRED_INIT_PARAMS })  {
 		{ REQUIRED_INIT_SETTERS }
	}

	convenience init?(_ dictionary: Dictionary<String, AnyObject>)  {

		let dynamicTypeString = "\(self.dynamicType)"
		let className = dynamicTypeString.componentsSeparatedByString(".").last

		if let valuesDict = US2Mapper.mapValues(from: dictionary, forType: className!, employing: US2Instantiator.sharedInstance, defaultsEnabled : true) {
			{ FAILABLE_INIT_TEMP_NONOPTIONALS }

			self.init({ SELF_NONOPTIONALS_INIT }) 
		
			{ OPTIONALS_UNWRAP }
		} else {
			return nil
		}
	}

	func updateWithDictionary(dictionary: Dictionary<String, AnyObject>) {

		let dynamicTypeString = "\(self.dynamicType)"
		let className = dynamicTypeString.componentsSeparatedByString(".").last

		if let valuesDict = US2Mapper.mapValues(from: dictionary, forType: className!, employing: US2Instantiator.sharedInstance, defaultsEnabled : false) {

			{ OPTIONALS_UNWRAP }
			{ NONOPTIONALS_UNWRAP }
 		} 
	}
} 