import Foundation{ BASE_CLASS_LIBRARY_IMPORT }
{ TEST_IMPORT }
class _{ CLASSNAME }  { BASE_CLASS } {
{ NONOPTIONALS }

{ OPTIONALS }

	required init({ REQUIRED_INIT_PARAMS })  {
{ REQUIRED_INIT_SETTERS }
	}

	convenience init?(_ dictionary: Dictionary<String, AnyObject>)  {

		let dynamicTypeString = "\(type(of: self))"
		let className = dynamicTypeString.components(separatedBy: ".").last

		if let valuesDict = JSONModelKit.mapValues(from: dictionary,
												   forType: className!,
												   employing: JMInstantiator.sharedInstance,
												   defaultsEnabled : true)
		{{ FAILABLE_INIT_TEMP_NONOPTIONALS }

			self.init({ SELF_NONOPTIONALS_INIT })

			{ OPTIONALS_UNWRAP }
		} else {
			return nil
		}
	}

	func updateWithDictionary(dictionary: Dictionary<String, AnyObject>) {

		let dynamicTypeString = "\(type(of: self))"
		let className = dynamicTypeString.components(separatedBy: ".").last

		if let valuesDict = JSONModelKit.mapValues(from: dictionary,
												   forType: className!,
												   employing: JMInstantiator.sharedInstance,
												   defaultsEnabled : false)
		{
			{ OPTIONALS_UNWRAP }
			{ NONOPTIONALS_UNWRAP }
 		}
	}
}
